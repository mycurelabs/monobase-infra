{{- if .Values.externalSecrets.enabled }}
# ArgoCD Application: External Secrets SecretStores
# Deploys SecretStore/ClusterSecretStore resources after External Secrets Operator is ready
# Sync Wave 1 - Deployed after External Secrets Operator (wave 0)

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets-stores
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"  # After external-secrets operator
  labels:
    app.kubernetes.io/name: external-secrets-stores
    app.kubernetes.io/component: infrastructure
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    repoURL: {{ .Values.argocd.repoURL }}
    targetRevision: {{ .Values.argocd.targetRevision }}
    path: infrastructure/external-secrets

    # Plain directory with YAML manifests
    directory:
      recurse: false
  
  destination:
    server: https://kubernetes.default.svc
    # ClusterSecretStore is cluster-scoped, but ServiceAccount goes to external-secrets-system
  
  syncPolicy:
    automated:
      prune: true       # Remove SecretStores if provider changes
      selfHeal: true    # Auto-correct configuration drift
    syncOptions:
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 3m
  
  # Ignore expected differences
  ignoreDifferences:
    # SecretStore status is managed by controller
    - group: external-secrets.io
      kind: ClusterSecretStore
      jsonPointers:
        - /status
    - group: external-secrets.io
      kind: SecretStore
      jsonPointers:
        - /status
    # ExternalSecret fields auto-populated by ESO operator
    - group: external-secrets.io
      kind: ExternalSecret
      jqPathExpressions:
        - .spec.target.deletionPolicy
        - .spec.data[].remoteRef.conversionStrategy
        - .spec.data[].remoteRef.decodingStrategy
        - .spec.data[].remoteRef.metadataPolicy
{{- end }}
