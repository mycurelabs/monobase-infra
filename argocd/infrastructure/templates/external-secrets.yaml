{{- if .Values.externalSecrets.enabled }}
# ArgoCD Application: External Secrets Operator
# Manages secrets from external sources (AWS Secrets Manager, Azure Key Vault, GCP Secret Manager, SOPS, etc.)
# Sync Wave 0 - Deployed before ClusterSecretStore resources

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/component: infrastructure
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  source:
    chart: external-secrets
    repoURL: https://charts.external-secrets.io
    targetRevision: {{ .Values.externalSecrets.version | default "0.9.11" }}

    helm:
      releaseName: external-secrets
      values: |
        installCRDs: true

        # Resource limits
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi

        # Webhook resource limits
        webhook:
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 64Mi

        # Cert controller resource limits
        certController:
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 64Mi

  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets-system

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 3m

  # Ignore expected differences
  ignoreDifferences:
    # CRD status is managed by apiserver
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      jsonPointers:
        - /status
    # MutatingWebhookConfiguration is managed by cert-controller
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      jsonPointers:
        - /webhooks/0/clientConfig/caBundle
    # ValidatingWebhookConfiguration is managed by cert-controller
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      jsonPointers:
        - /webhooks/0/clientConfig/caBundle
{{- end }}
