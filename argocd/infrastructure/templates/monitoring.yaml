{{- if .Values.monitoring.enabled }}
# ArgoCD Application: Monitoring Stack (Prometheus + Grafana)
# Sync Wave 0 - Deploy monitoring (cluster-wide, optional)

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    chart: kube-prometheus
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: {{ .Values.monitoring.version | default "11.x.x" }}
    helm:
      releaseName: monitoring
      valuesObject:
        # Global storage configuration
        global:
          defaultStorageClass: ""
        
        # Use bitnamilegacy images (Bitnami deprecated non-hardened Debian images)
        operator:
          image:
            repository: bitnamilegacy/prometheus-operator
        
        prometheus:
          image:
            repository: bitnamilegacy/prometheus
        
        alertmanager:
          image:
            repository: bitnamilegacy/alertmanager
        
        blackboxExporter:
          image:
            repository: bitnamilegacy/blackbox-exporter
        
        # Prometheus configuration
        prometheus:
          enabled: true
          retention: "30d"
          retentionSize: "45GB"
          
          persistence:
            enabled: true
            storageClass: ""
            size: "50Gi"
          
          resources:
            requests:
              cpu: "500m"
              memory: "2Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          
          # Security context
          securityContext:
            enabled: true
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 2000
        
        # Grafana configuration
        grafana:
          enabled: true
          
          image:
            repository: bitnamilegacy/grafana
          
          admin:
            password: "admin"
          
          persistence:
            enabled: true
            storageClass: ""
            size: "10Gi"
          
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
        
        # Alertmanager configuration
        alertmanager:
          enabled: true
          
          persistence:
            enabled: true
            storageClass: ""
            size: "10Gi"
          
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
        
        # Node Exporter
        nodeExporter:
          enabled: true
          image:
            repository: bitnamilegacy/node-exporter
        
        # Kube State Metrics
        kubeStateMetrics:
          enabled: true
          image:
            repository: bitnamilegacy/kube-state-metrics
        
        # Prometheus Operator
        operator:
          enabled: true
  
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 10s
        maxDuration: 5m
  
  ignoreDifferences:
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      jsonPointers:
        - /webhooks/0/clientConfig/caBundle
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      jsonPointers:
        - /webhooks/0/clientConfig/caBundle
{{- end }}
