# Default values for monobase-infrastructure Helm chart
# These control cluster-wide infrastructure components

argocd:
  repoURL: https://github.com/mycurelabs/monobase-infra.git
  targetRevision: main

# Cert Manager - TLS certificate automation
certManager:
  enabled: true
  version: v1.14.2

# Cert Manager Resources - ClusterIssuers and certificate configuration
certManagerIssuers:
  enabled: true
  issuers:
    # HTTP-01 defaults (no DNS provider needed, client creates A record)
    - name: letsencrypt-prod
      email: "caretheextramile@gmail.com"
      server: production
      provider: http01
    
    - name: letsencrypt-staging
      email: "caretheextramile@gmail.com"
      server: staging
      provider: http01
    
    # DNS-01 Cloudflare for MyCure platform wildcard certificates
    - name: letsencrypt-mycure-cloudflare-prod
      email: "caretheextramile@gmail.com"
      server: production
      provider: cloudflare
      cloudflare:
        dnsZones:
          - "mycureapp.com"
        apiTokenSecretRef:
          name: mycure-cloudflare-api-token
          key: api-token
    
    - name: letsencrypt-mycure-cloudflare-staging
      email: "caretheextramile@gmail.com"
      server: staging
      provider: cloudflare
      cloudflare:
        dnsZones:
          - "mycureapp.com"
        apiTokenSecretRef:
          name: mycure-cloudflare-api-token
          key: api-token

# Envoy Gateway - Gateway API implementation
envoyGateway:
  enabled: true
  version: v1.2.0

# Gateway Resources - Shared Gateway configuration
gateway:
  # Base domain for gateway (override per deployment)
  domain: example.com

  # Gateway configuration
  gateway:
    name: shared-gateway
    namespace: gateway-system
    gatewayClassName: envoy-gateway
    listeners:
      https:
        enabled: true
        port: 443
        protocol: HTTPS
      http:
        enabled: true
        port: 80
        protocol: HTTP

  # TLS/Certificate configuration
  tls:
    enabled: true
    secretName: wildcard-tls
    certManager:
      enabled: true
      clusterIssuer: letsencrypt-mycure-cloudflare-prod  # Use Cloudflare DNS-01 for wildcard
      includeApex: true

  # HTTP to HTTPS redirect
  httpRedirect:
    enabled: true
    statusCode: 301

# External Secrets - Secret management
externalSecrets:
  enabled: true
  version: 0.9.11
  provider: gcp  # Options: aws, azure, gcp
  
  # AWS Secrets Manager configuration
  aws:
    region: us-east-1
    roleArn: ""  # Set to IRSA role ARN (e.g., arn:aws:iam::123456789012:role/external-secrets-role)
    serviceAccountName: external-secrets-sa
  
  # Azure Key Vault configuration
  azure:
    vaultUrl: ""  # Set to Key Vault URL (e.g., https://myvault.vault.azure.net/)
    identityId: ""  # Set to Managed Identity client ID
  
  # GCP Secret Manager configuration
  gcp:
    projectId: ""  # Set to GCP project ID
    region: us-central1
    clusterName: ""  # Set to GKE cluster name
    serviceAccountEmail: ""  # Set to GCP service account email

# External DNS - Automatic DNS record management from HTTPRoutes
externalDNS:
  enabled: true

# Longhorn - Distributed block storage
longhorn:
  enabled: false  # Usually use cloud provider storage
  version: 1.6.0

# Kyverno - Policy engine
kyverno:
  enabled: false  # Optional, enable for policy enforcement
  version: 3.2.0
  policies:
    enabled: false  # Only if kyverno.enabled=true

# Velero - Backup and disaster recovery
velero:
  enabled: false  # Enable for production clusters with backup requirements
  version: 7.1.4
  provider: gcp  # Options: aws, azure, gcp, digitalocean, minio
  
  # AWS S3 configuration
  aws:
    region: us-east-1
    bucket: ""  # Set to S3 bucket name (e.g., my-cluster-velero-backups)
    roleArn: ""  # Auto-populated from terraform output (IRSA)
  
  # Azure Blob Storage configuration
  azure:
    resourceGroup: ""  # Set to Azure resource group
    storageAccount: ""  # Set to storage account name
    blobContainer: ""  # Set to blob container name (e.g., velero-backups)
    subscriptionId: ""  # Optional, auto-detected if not set
    identityClientId: ""  # Auto-populated from terraform output (Workload Identity)
  
  # GCP Cloud Storage configuration
  gcp:
    bucket: ""  # Set to GCS bucket name (e.g., my-cluster-velero-backups)
    projectId: ""  # Set to GCP project ID
    region: us-central1
    serviceAccount: ""  # Auto-populated from terraform output (Workload Identity)
  
  # DigitalOcean Spaces configuration
  digitalocean:
    bucket: ""  # Set to Spaces bucket name
    region: nyc3  # Spaces region: nyc3, sfo3, sgp1, fra1, ams3
    accessKey: ""  # Via External Secrets or manual secret
    secretKey: ""  # Via External Secrets or manual secret
  
  # MinIO configuration (for K3D/local development)
  minio:
    bucket: velero-backups
    url: http://minio.velero.svc:9000
    publicUrl: http://localhost:9000
    accessKey: minio
    secretKey: minio123
  
  # Backup schedules configuration
  schedules:
    # Infrastructure namespace backups
    infrastructure:
      daily:
        enabled: true
        schedule: "0 3 * * *"  # 3 AM daily
        retention: 720h  # 30 days
      hourly:
        enabled: false  # Optional, for critical infrastructure
        schedule: "0 * * * *"  # Every hour
        retention: 72h  # 3 days
    
    # Cluster-wide resource backups
    cluster:
      weekly:
        enabled: true
        schedule: "0 4 * * 0"  # 4 AM Sunday
        retention: 2160h  # 90 days

# Falco - Runtime security monitoring
falco:
  enabled: false  # Optional, enable for runtime threat detection
  version: 4.6.1
  rules:
    enabled: false  # Only if falco.enabled=true

# Monitoring - Prometheus + Grafana stack
monitoring:
  enabled: true  # Optional, enable for observability
  version: 56.0.0
  
  # Prometheus configuration
  prometheus:
    retention: 30d  # How long to keep metrics
    storageSize: 50Gi  # Prometheus data storage
    storageClass: ""  # Auto-detect from cluster default
  
  # Grafana configuration
  grafana:
    adminPassword: ""  # Set via secret or leave empty for default
    storageSize: 10Gi  # Grafana dashboard/config storage
    storageClass: ""  # Auto-detect
  
  # Alertmanager configuration
  alertmanager:
    enabled: true
    storageClass: ""  # Auto-detect
    
    # Slack notifications (optional)
    slack:
      webhookUrl: ""  # Set to Slack webhook URL for alerts
    
    # Email notifications (optional)
    email:
      smarthost: ""  # SMTP server (e.g., smtp.gmail.com:587)
      from: ""  # From email address
      to: ""  # To email address
