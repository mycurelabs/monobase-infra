# External DNS - Infrastructure Configuration
# Cluster-wide DNS automation for all environments

enabled: true

# External DNS image configuration
image:
  registry: registry.k8s.io
  repository: external-dns/external-dns
  tag: "v0.19.0"
  pullPolicy: IfNotPresent

# Multiple External DNS instances
# Each instance can manage different DNS provider and domains
instances:
  # Primary instance: Cloudflare for mycureapp.com (all environments)
  - name: primary
    enabled: true
    provider: cloudflare

    # Manage all mycureapp.com subdomains across all namespaces
    domainFilters:
      - mycureapp.com

    # Cloudflare-specific configuration
    cloudflare:
      proxied: false  # DNS only, no Cloudflare proxy
      apiTokenSecretRef:
        name: cloudflare-api-token
        key: api-token

    # Resource limits
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 50m
        memory: 64Mi

  # Example: Add new client with different DNS provider
  # - name: client-a
  #   enabled: true
  #   provider: route53
  #   domainFilters:
  #     - clienta.com
  #   aws:
  #     region: us-east-1
  #     zoneType: public
  #   resources:
  #     requests:
  #       cpu: 10m
  #       memory: 32Mi
  #     limits:
  #       cpu: 50m
  #       memory: 64Mi

# Global configuration applied to all instances
global:
  # Sources to watch (applied to all instances)
  sources:
    - gateway-httproute
    - gateway-tcproute
    - gateway-tlsroute
    - service

  # Policy: sync (create+update+delete) or upsert-only (create+update)
  policy: sync

  # Registry type for tracking ownership
  registry: txt

  # TXT record prefix
  txtPrefix: "external-dns-"

  # Log level: panic, debug, info, warning, error, fatal
  logLevel: debug

  # Log format: text or json
  logFormat: text

  # Interval between DNS updates
  interval: 1m

  # Trigger loop on create (in addition to interval)
  triggerLoopOnEvent: true

# Pod-level security context (PodSecurity restricted compliant)
securityContext:
  runAsNonRoot: true
  runAsUser: 65534  # nobody user
  fsGroup: 65534
  seccompProfile:
    type: RuntimeDefault
