# External Secrets SecretStore Resources
# Deployed automatically by ArgoCD when externalSecrets.enabled=true
#
# This creates the SecretStore/ClusterSecretStore that applications reference
# to sync secrets from external providers (AWS, Azure, GCP, SOPS).
#
# Applications reference via: externalSecrets.secretStore in values.yaml

---
# AWS Secrets Manager ClusterSecretStore
# Used when provider=aws
# Requires IRSA (IAM Roles for Service Accounts) configuration
{{- if eq .Values.externalSecrets.provider "aws" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: external-secrets-system
  annotations:
    # IRSA annotation - grants access to AWS Secrets Manager
    eks.amazonaws.com/role-arn: {{ .Values.externalSecrets.aws.roleArn | quote }}
  labels:
    app.kubernetes.io/name: external-secrets-sa
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secretstore
  labels:
    app.kubernetes.io/name: aws-secretstore
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd
spec:
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.externalSecrets.aws.region | default "us-east-1" | quote }}
      auth:
        jwt:
          serviceAccountRef:
            name: {{ .Values.externalSecrets.aws.serviceAccountName | default "external-secrets-sa" | quote }}
            namespace: external-secrets-system
{{- end }}

---
# Azure Key Vault ClusterSecretStore
# Used when provider=azure
# Requires Workload Identity configuration
{{- if eq .Values.externalSecrets.provider "azure" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: external-secrets-system
  annotations:
    # Workload Identity annotation
    azure.workload.identity/client-id: {{ .Values.externalSecrets.azure.identityId | quote }}
  labels:
    app.kubernetes.io/name: external-secrets-sa
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd
    azure.workload.identity/use: "true"

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: azure-secretstore
  labels:
    app.kubernetes.io/name: azure-secretstore
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd
spec:
  provider:
    azurekv:
      vaultUrl: {{ .Values.externalSecrets.azure.vaultUrl | quote }}
      authType: WorkloadIdentity
      serviceAccountRef:
        name: external-secrets-sa
        namespace: external-secrets-system
{{- end }}

---
# GCP Secret Manager ClusterSecretStore
# Used when provider=gcp
# Requires Workload Identity configuration
{{- if eq .Values.externalSecrets.provider "gcp" }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: external-secrets-system
  annotations:
    # Workload Identity annotation
    iam.gke.io/gcp-service-account: {{ .Values.externalSecrets.gcp.serviceAccountEmail | quote }}
  labels:
    app.kubernetes.io/name: external-secrets-sa
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: gcp-secretstore
  labels:
    app.kubernetes.io/name: gcp-secretstore
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd
spec:
  provider:
    gcpsm:
      projectID: {{ .Values.externalSecrets.gcp.projectId | quote }}
      auth:
        workloadIdentity:
          clusterLocation: {{ .Values.externalSecrets.gcp.region | quote }}
          clusterName: {{ .Values.externalSecrets.gcp.clusterName | quote }}
          serviceAccountRef:
            name: external-secrets-sa
            namespace: external-secrets-system
{{- end }}

---
# SOPS ClusterSecretStore
# Used when provider=sops
# For Git-encrypted secrets (age or PGP)
{{- if eq .Values.externalSecrets.provider "sops" }}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: sops-secretstore
  labels:
    app.kubernetes.io/name: sops-secretstore
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/managed-by: argocd
spec:
  provider:
    sops:
      type: age  # or pgp
      secretRef:
        name: sops-age-key
        namespace: cert-manager  # Bootstrap secret location
        key: age.agekey
{{- end }}

---
# Per-Namespace SecretStore Example
# Applications can use namespace-specific SecretStores for isolation
# Uncomment and customize as needed
#
# {{- if eq .Values.externalSecrets.provider "aws" }}
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: namespace-secretstore
#   namespace: {{ .Values.global.namespace }}
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: {{ .Values.externalSecrets.aws.region | quote }}
#       auth:
#         jwt:
#           serviceAccountRef:
#             name: external-secrets-sa
#             namespace: external-secrets-system
# {{- end }}
