# Default values for Monobase API chart
# This is a YAML-formatted file with sensible defaults
# Override these values in config/{client}/values-{env}.yaml

# Global configuration (shared across charts)
global:
  domain: example.com
  namespace: example-prod
  environment: production
  gateway:
    name: shared-gateway
    namespace: gateway-system

# Monobase API application configuration
enabled: true

replicaCount: 2

image:
  repository: ghcr.io/monobaselabs/api
  pullPolicy: IfNotPresent
  tag: "0.1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false

service:
  type: ClusterIP
  port: 7213
  targetPort: 7213
  annotations: {}

# Gateway API HTTPRoute configuration
gateway:
  enabled: true
  hostname: ""  # Empty = uses api.{global.domain}
  parentRefs:
    - name: shared-gateway
      namespace: gateway-system

resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: "2"
    memory: 4Gi

livenessProbe:
  enabled: true
  httpGet:
    path: /livez
    port: 7213
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /readyz
    port: 7213
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 2

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  enabled: true
  minAvailable: 1

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - api
          topologyKey: kubernetes.io/hostname

# Application configuration (ConfigMap)
config:
  NODE_ENV: production
  LOG_LEVEL: info
  PORT: "7213"
  # Database URL from secrets
  # S3 configuration from secrets/ConfigMap
  # SMTP configuration from secrets/ConfigMap

# External Secrets configuration
externalSecrets:
  enabled: true
  secretStore: ""  # Uses global.namespace-secretstore
  refreshInterval: 1h
  secrets: []

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: gateway-system
      ports:
        - protocol: TCP
          port: 7213
  egress:
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 5432   # PostgreSQL
        - protocol: TCP
          port: 6379   # Valkey (Redis)
        - protocol: TCP
          port: 9000   # MinIO
        - protocol: TCP
          port: 1025   # Mailpit SMTP
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 53     # DNS
        - protocol: UDP
          port: 53     # DNS
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443    # HTTPS (external APIs)

# Service Monitor for Prometheus (if monitoring enabled)
serviceMonitor:
  enabled: false
  interval: 30s
  path: /metrics

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  architecture: replication
  replicaCount: 2
  # Service name override - use when PostgreSQL is deployed separately
  # Default: uses Release.Name (e.g., "api-postgresql")
  # Set to "postgresql" when PostgreSQL has its own release
  serviceName: ""
  auth:
    enabled: true
    existingSecret: ""
  persistence:
    enabled: true
    storageClass: longhorn
    size: 100Gi

# Valkey (Redis-compatible cache) dependency configuration
valkey:
  enabled: true
  architecture: replication
  master:
    persistence:
      enabled: true
      storageClass: longhorn
      size: 8Gi

# Mailpit dependency configuration (email testing for dev/staging)
mailpit:
  enabled: false
