{{- if and .Values.enabled .Values.gateway.enabled }}
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: {{ include "minio.fullname" . }}
  namespace: {{ include "minio.namespace" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
spec:
  parentRefs:
    - name: {{ include "minio.gateway.name" . }}
      namespace: {{ include "minio.gateway.namespace" . }}
  hostnames:
    - {{ include "minio.gateway.hostname" . }}
  rules:
    # S3 API and MinIO Console
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: minio
          port: 9000
          weight: 1
      
      {{- if .Values.gateway.rateLimit.enabled }}
      # Rate limiting for public file access
      filters:
        - type: ExtensionRef
          extensionRef:
            group: gateway.envoyproxy.io
            kind: BackendTrafficPolicy
            name: minio-rate-limit
      {{- end }}

{{- if .Values.gateway.rateLimit.enabled }}
---
# BackendTrafficPolicy for MinIO Rate Limiting
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: minio-rate-limit
  namespace: {{ include "minio.namespace" . }}
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: {{ include "minio.fullname" . }}
  
  rateLimit:
    type: Global
    global:
      rules:
        # Per-IP download rate limit
        - limit:
            requests: {{ .Values.gateway.rateLimit.perIP.requests }}
            unit: {{ .Values.gateway.rateLimit.perIP.unit }}
          clientSelectors:
            - headers:
                - name: X-Forwarded-For
                  type: Distinct
        
        # Burst limit
        - limit:
            requests: {{ .Values.gateway.rateLimit.burst.requests }}
            unit: {{ .Values.gateway.rateLimit.burst.unit }}
          clientSelectors:
            - headers:
                - name: X-Forwarded-For
                  type: Distinct
{{- end }}
{{- end }}
